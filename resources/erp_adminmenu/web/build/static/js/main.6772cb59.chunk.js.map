{"version":3,"sources":["utils/misc.ts","hooks/useNuiEvent.ts","utils/fetchNui.ts","hooks/useExitListener.ts","components/Menus/MainMenu.tsx","components/Menus/PlayerManagement.tsx","redux/actions/identifiers.tsx","components/Menus/PlayerList/PlayerItem.tsx","components/Menus/PlayerList.tsx","components/Misc/Identifiers.tsx","components/Menus/StaffCommands.tsx","components/Menus/UtilityActions.tsx","components/App.tsx","redux/reducers/index.tsx","redux/reducers/identifiers.tsx","index.tsx"],"names":["noop","useNuiEvent","action","handler","savedHandler","useRef","useEffect","current","eventListener","event","data","eventAction","window","addEventListener","removeEventListener","fetchNui","eventName","a","options","method","headers","body","JSON","stringify","resourceName","GetParentResourceName","fetch","resp","json","respFormatted","LISTENED_KEYS","MainMenu","props","navStyle","color","textDecoration","CardContent","Grid","container","spacing","width","item","List","dense","style","to","ListItemButton","ListItemIcon","ListItemText","primary","secondary","PlayerManagement","useState","offlineBan","setOfflineBan","handleOfflineBanClose","unban","setUnban","handleUnbanClose","label","time","banLength","setBanLength","name","setName","banReason","setBanReason","fivemIdentifier","setFivemIdentifier","steamIdentifier","setSteamIdentifier","discordIdentifier","setDiscordIdentifier","licenseIdentifier","setLicenseIdentifier","ipIdentifier","setIpIdentifier","unbanText","setUnbanText","Dialog","className","open","onClose","DialogTitle","id","DialogContent","sx","marginTop","xs","Autocomplete","value","onChange","values","renderInput","params","TextField","e","target","marginBottom","fullWidth","DialogContentText","DialogActions","Button","onClick","Name","BanReason","FiveM","Steam","Discord","License","IP","reason","fivem","steam","discord","license","ip","then","resData","setNotifMessage","autoFocus","maxWidth","setIdentifiers","currentIdentifiers","dispatch","type","payload","error","console","log","PlayerItem","setOpen","Tooltip","title","placement","arrow","divider","alignItems","note","Stack","direction","Chip","online","variant","size","Collapse","in","timeout","unmountOnExit","component","disablePadding","setIdentifier","pl","banPlayerPrompt","kickPlayerPrompt","PlayerList","players","setPlayers","banOpen","setBanOpen","kickOpen","setKickOpen","search","setSearch","currentInfo","setCurrentInfo","handleClose","useDispatch","show","refresh","kickReason","setKickReason","OrderedList","sort","b","FormControl","InputLabel","htmlFor","Input","startAdornment","InputAdornment","position","filter","player","toLowerCase","includes","map","filteredPerson","Identifiers","React","identifiersState","useSelector","state","identifiers","StaffCommands","tpcoords","setTpCoords","handleTpCoordsClose","coordsMessage","setCoordsMessage","message","UtilityActions","clear","setClear","handleClearClose","clearArea","setClearArea","darkTheme","createTheme","palette","mode","App","isVisible","setIsVisible","setRefresh","playerCount","setPlayerCount","maxPlayerCount","setMaxPlayerCount","visibleSetter","setterRef","keyHandler","code","useExitListener","history","useHistory","handleRefresh","notification","setNotification","notificiationMessage","setNotificationMessage","handleCloseNotif","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","Alert","severity","display","ThemeProvider","theme","Card","minWidth","maxHeight","overflow","AppBar","Toolbar","IconButton","goBack","edge","mr","Typography","flexGrow","push","path","exact","render","playercount","maxcount","combineReducers","store","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","ReactDOM","basename","document","getElementById"],"mappings":"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","file":"static/js/main.6772cb59.chunk.js","sourcesContent":["// Will return whether the current environment is in a regular browser\n// and not CEF\nexport const isEnvBrowser = (): boolean => !(window as any).invokeNative\n\n// Basic no operation function\nexport const noop = () => {}","import {MutableRefObject, useEffect, useRef} from \"react\";\nimport {noop} from \"../utils/misc\";\n\ninterface NuiMessageData<T = unknown> {\n  action: string;\n  data: T;\n}\n\ntype NuiHandlerSignature<T> = (data: T) => void;\n\n/**\n * A hook that manage events listeners for receiving data from the client scripts\n * @param action The specific `action` that should be listened for.\n * @param handler The callback function that will handle data relayed by this hook\n *\n * @example\n * useNuiEvent<{visibility: true, wasVisible: 'something'}>('setVisible', (data) => {\n *   // whatever logic you want\n * })\n *\n **/\n\nexport const useNuiEvent = <T = any>(\n  action: string,\n  handler: (data: T) => void\n) => {\n  const savedHandler: MutableRefObject<NuiHandlerSignature<T>> = useRef(noop);\n\n  // When handler value changes set mutable ref to handler val\n  useEffect(() => {\n    savedHandler.current = handler;\n  }, [handler]);\n\n  useEffect(() => {\n    const eventListener = (event: MessageEvent<NuiMessageData<T>>) => {\n      const { action: eventAction, data } = event.data;\n\n      if (savedHandler.current) {\n        if (eventAction === action) {\n          savedHandler.current(data);\n        }\n      }\n    };\n\n    window.addEventListener(\"message\", eventListener);\n    // Remove Event Listener on component cleanup\n    return () => window.removeEventListener(\"message\", eventListener);\n  }, [action]);\n};","/**\n * Simple wrapper around fetch API tailored for CEF/NUI use. This abstraction\n * can be extended to include AbortController if needed or if the response isn't\n * JSON. Tailor it to your needs.\n *\n * @param eventName - The endpoint eventname to target\n * @param data - Data you wish to send in the NUI Callback\n *\n * @return returnData - A promise for the data sent back by the NuiCallbacks CB argument\n */\n\nexport async function fetchNui<T = any>(eventName: string, data?: any): Promise<T> {\n  const options = {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(data),\n  };\n\n  const resourceName = (window as any).GetParentResourceName ? (window as any).GetParentResourceName() : 'nui-frame-app';\n\n  const resp = await fetch(`https://${resourceName}/${eventName}`, options);\n\n  const respFormatted = await resp.json()\n\n  return respFormatted\n}\n","import {useEffect, useRef} from \"react\";\nimport {noop} from \"../utils/misc\";\nimport {fetchNui} from \"../utils/fetchNui\";\n\ntype FrameVisibleSetter = (bool: boolean) => void\n\nconst LISTENED_KEYS = [ \"Escape\" ]\n\n// Basic hook to listen for key presses in NUI in order to exit\nexport const useExitListener = (visibleSetter: FrameVisibleSetter) => {\n  const setterRef = useRef<FrameVisibleSetter>(noop)\n\n  useEffect(() => {\n    setterRef.current = visibleSetter\n  }, [visibleSetter])\n\n  useEffect(() => {\n    const keyHandler = (e: KeyboardEvent) => {\n      if (LISTENED_KEYS.includes(e.code)) {\n        setterRef.current(false)\n        fetchNui('hideFrame')\n      }\n    }\n\n    window.addEventListener(\"keydown\", keyHandler)\n\n    return () => window.removeEventListener(\"keydown\", keyHandler)\n  }, []);\n\n\n}","import React, {useState, useEffect} from 'react';\nimport '../App.css'\n\nimport CardContent from '@mui/material/CardContent'\nimport List from '@mui/material/List';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Grid from '@mui/material/Grid';\nimport PeopleIcon from '@mui/icons-material/People';\nimport KeyboardIcon from '@mui/icons-material/Keyboard';\nimport SettingsIcon from '@mui/icons-material/Settings';\n\nimport { Link } from 'react-router-dom'\n\ninterface props {\n}\n\nconst MainMenu: React.FC<props> = (props) => {\n\n\tconst navStyle = {\n\t\tcolor: 'white',\n\t\ttextDecoration: 'none'\n\t}\n\n\treturn (\n    <CardContent>\n\t\t\t<Grid container spacing={2} width={485}>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<List dense={true}>\n\t\t\t\t\t\t<Link style={navStyle} to='/playermanagement'>\n\t\t\t\t\t\t\t<ListItemButton>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t<PeopleIcon />\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText primary=\"Player Management\" secondary='View a list of player management options where you can execute bans, unbans, spectate and much more.' />\n\t\t\t\t\t\t\t</ListItemButton>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<Link style={navStyle} to='/staffcommands'>\n\t\t\t\t\t\t\t<ListItemButton>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t<KeyboardIcon />\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText primary=\"Staff Commands\" secondary='Access a list of quick admin commands, including teleportation.' />\n\t\t\t\t\t\t\t</ListItemButton>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<Link style={navStyle} to='/utilityactions'>\n\t\t\t\t\t\t\t<ListItemButton>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t<SettingsIcon />\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText primary=\"Utility\" secondary='Misc. actions entity removal and more!' />\n\t\t\t\t\t\t\t</ListItemButton>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</List>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</CardContent>\n  );\n}\n\nexport default MainMenu;","import React, {useState, useEffect} from 'react';\nimport '../App.css'\n\nimport CardContent from '@mui/material/CardContent'\nimport List from '@mui/material/List';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Grid from '@mui/material/Grid';\nimport ListIcon from '@mui/icons-material/List';\nimport LockOpenIcon from '@mui/icons-material/LockOpen';\nimport GavelIcon from '@mui/icons-material/Gavel'\nimport {fetchNui} from \"../../utils/fetchNui\";\n\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { Link } from 'react-router-dom'\n\nimport TextField from '@mui/material/TextField';\n\ninterface props {\n\tplayercount: number,\n\tmaxcount: number,\n\tsetNotifMessage: any\n}\n\ninterface OfflineBanData {\n\ttime: number,\n\tname: string,\n\treason: string,\n\tfivem: string,\n\tsteam: string,\n\tdiscord: string,\n\tlicense: string,\n\tip: string\n}\n\ninterface UnbanData { id: number }\n\nconst PlayerManagement: React.FC<props> = (props) => {\n\n\tconst navStyle = {\n\t\tcolor: 'white',\n\t\ttextDecoration: 'none'\n\t}\n\n\tconst [offlineBan, setOfflineBan] = useState(false)\n\n\tconst handleOfflineBanOpen = () => {\n\t\tsetOfflineBan(true)\n\t}\n\n\tconst handleOfflineBanClose = () => {\n\t\tsetOfflineBan(false)\n\t}\n\n\tconst [unban, setUnban] = useState(false)\n\n\tconst handleUnbanOpen = () => {\n\t\tsetUnban(true)\n\t}\n\n\tconst handleUnbanClose = () => {\n\t\tsetUnban(false)\n\t}\n\n\tconst banOptions = [\n\t\t{ label: '1 Hour', time:  3600 },\n\t\t{ label: '6 Hours', time:  21600 },\n\t\t{ label: '12 Hours', time:  43200 },\n\t\t{ label: '1 Day', time: 86400 },\n\t\t{ label: '2 Days', time:  172800 },\n\t\t{ label: '3 Days', time:  259200 },\n\t\t{ label: '5 Days', time:  432000 },\n\t\t{ label: '1 Week', time:  604800 },\n\t\t{ label: '2 Weeks', time: 1209600 },\n\t\t{ label: 'Permanent', time: 69 },\n\t];\n\n\tconst [banLength, setBanLength] = useState({\n\t\tlabel: \"1 Hour\",\n\t\ttime: 3600\n\t})\n\n\tconst updateBanLength = (event, values) => {\n\t\tsetBanLength(values)\n\t}\n\n\tconst [name, setName] = useState(\"\")\n\t\n\tconst updateName = (e: any) => {\n\t\tsetName(e.target.value)\n\t}\n\n\tconst [banReason, setBanReason] = useState(\"\")\n\t\n\tconst updateBanReason = (e: any) => {\n\t\tsetBanReason(e.target.value)\n\t}\n\n\tconst [fivemIdentifier, setFivemIdentifier] = useState(\"\")\n\t\n\tconst updateFivemIdentifier = (e: any) => {\n\t\tsetFivemIdentifier(e.target.value)\n\t}\n\n\tconst [steamIdentifier, setSteamIdentifier] = useState(\"\")\n\t\n\tconst updateSteamIdentifier = (e: any) => {\n\t\tsetSteamIdentifier(e.target.value)\n\t}\n\n\tconst [discordIdentifier, setDiscordIdentifier] = useState(\"\")\n\t\n\tconst updateDiscordIdentifier = (e: any) => {\n\t\tsetDiscordIdentifier(e.target.value)\n\t}\n\n\tconst [licenseIdentifier, setLicenseIdentifier] = useState(\"\")\n\t\n\tconst updateLicenseIdentifier = (e: any) => {\n\t\tsetLicenseIdentifier(e.target.value)\n\t}\n\n\tconst [ipIdentifier, setIpIdentifier] = useState(\"\")\n\t\n\tconst updateIpIdentifier = (e: any) => {\n\t\tsetIpIdentifier(e.target.value)\n\t}\n\n\tconst handleOfflineBan = () => {\n\t\tconst Name = name || \"Invalid\"\n\t\tconst BanReason = banReason || \"Invalid\"\n\t\tconst FiveM = fivemIdentifier || \"Invalid\"\n\t\tconst Steam = steamIdentifier || \"Invalid\"\n\t\tconst Discord = discordIdentifier || \"Invalid\"\n\t\tconst License = licenseIdentifier || \"Invalid\"\n\t\tconst IP = ipIdentifier || \"Invalid\"\n\t\tfetchNui<OfflineBanData>('offlineBanPlayer', { time: banLength.time, name: Name, reason: BanReason, fivem: FiveM, steam: Steam, discord: Discord, license: License, ip: IP}).then(resData => { \n\t\t\tprops.setNotifMessage(\"This player has been banned!\")\n\t\t\thandleOfflineBanClose()\n\t\t\tsetBanReason(\"\")\n\t\t})\n\t}\n\n\tconst [unbanText, setUnbanText] = useState(\"\")\n\t\n\tconst updateUnbanText = (e: any) => {\n\t\tsetUnbanText(e.target.value)\n\t}\n\n\tconst handleUnban = () => {\n\t\tif (unbanText === \"\") { \n\t\t\tprops.setNotifMessage(\"Please provide a valid ban ID\") \n\t\t\treturn \n\t\t}\n\t\tfetchNui<UnbanData>('unbanId', { id: unbanText }).then(resData => { \n\t\t\tprops.setNotifMessage(\"This player has been unbanned!\")\n\t\t\thandleUnbanClose()\n\t\t\tsetUnbanText(\"\")\n\t\t})\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t\n\t\t\t<Dialog className=\"dialogBan\" open={offlineBan} onClose={handleOfflineBanClose} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description2\" >\n\t\t\t\t<DialogTitle id=\"alert-dialog-title\"> {\"Offline Ban\"} </DialogTitle>\n\t\t\t\t<DialogContent>\n\t\t\t\t<Grid container spacing={2} sx={{ marginTop:'0.1px' }} className=\"banDialog\" >\n\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t<Autocomplete value={banLength} onChange={updateBanLength} id=\"combo-box-demo\" options={banOptions} sx={{ width: 260 }} renderInput={(params) => <TextField {...params} label=\"Ban Length\" />} />\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t<TextField value={name} onChange={updateName} label=\"Name\" sx={{ width: 267}} />\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t\t<TextField value={banReason} onChange={updateBanReason} label=\"Ban Reason\" sx={{marginBottom: '15px'}} fullWidth />\n\n\t\t\t\t<Grid container spacing={2} className=\"banDialog\" >\n\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t<TextField value={fivemIdentifier} onChange={updateFivemIdentifier} label=\"FiveM\" sx={{ width: 265}} />\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t<TextField value={steamIdentifier} onChange={updateSteamIdentifier} label=\"Steam\" sx={{width: 268}} />\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid container spacing={2} className=\"banDialog\" >\n\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t<TextField value={discordIdentifier} onChange={updateDiscordIdentifier} label=\"Discord\" sx={{ width: 265}} />\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t<TextField value={licenseIdentifier} onChange={updateLicenseIdentifier} label=\"License\" sx={{width: 268}} />\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t\t<TextField value={ipIdentifier} onChange={updateIpIdentifier} label=\"IP\" sx={{marginBottom: '15px', width: 300}} />\n\t\t\t\t<DialogContentText id=\"alert-dialog-description2\">You are about to offline ban a player, do you wish to continue?</DialogContentText>\n\t\t\t\t</DialogContent>\n\t\t\t\t<DialogActions>\n\t\t\t\t\t<Button onClick={handleOfflineBanClose}>No</Button>\n\t\t\t\t\t<Button onClick={handleOfflineBan} autoFocus>Yes</Button>\n\t\t\t\t</DialogActions>\n\t\t\t</Dialog>\n\n\t\t\t<Dialog className=\"dialogBan\" open={unban} onClose={handleUnbanClose} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description2\" >\n\t\t\t\t<DialogTitle id=\"alert-dialog-title\"> {\"Unban Player\"} </DialogTitle>\n\t\t\t\t<DialogContent>\n\t\t\t\t<TextField label=\"Ban ID\" value={unbanText} onChange={updateUnbanText} sx={{marginBottom: '15px', marginTop:'5px', width: 300}} />\n\t\t\t\t<DialogContentText id=\"alert-dialog-description2\">Are you sure you want to unban this player? I guarentee you will regret it in a week.</DialogContentText>\n\t\t\t\t</DialogContent>\n\t\t\t\t<DialogActions>\n\t\t\t\t\t<Button onClick={handleUnbanClose}>Let them rot</Button>\n\t\t\t\t\t<Button onClick={handleUnban} autoFocus>I'll take the chance</Button>\n\t\t\t\t</DialogActions>\n\t\t\t</Dialog>\n\n\t\t\t<CardContent>\n\t\t\t\t<Grid container spacing={2} maxWidth={585}>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<List dense={true}>\n\t\t\t\t\t\t\t<Link style={navStyle} to='/playerlist'>\n\t\t\t\t\t\t\t\t<ListItemButton>\n\t\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t\t<ListIcon />\n\t\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t\t<ListItemText primary=\"Player List\" secondary={`Browse through a list of players where you can ban, kick, spectate, etc... a specific player.`} />\n\t\t\t\t\t\t\t\t</ListItemButton>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t<ListItemButton onClick={handleOfflineBanOpen} >\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t<GavelIcon />\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText primary=\"Force Ban\" secondary='Offline ban a player by providing their identifiers and nickname.' />\n\t\t\t\t\t\t\t</ListItemButton>\n\t\t\t\t\t\t\t<ListItemButton onClick={handleUnbanOpen}>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t<LockOpenIcon />\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText primary=\"Pardon Player\" secondary='Unban a player, allowing them to join the server.' />\n\t\t\t\t\t\t\t</ListItemButton>\n\t\t\t\t\t\t</List>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</CardContent>\n\t\t</div>\n  );\n}\n\nexport default PlayerManagement;","interface identifiers {\n\tsteam: string,\n\tdiscord: string,\n\tfivem: string,\n\tshow: boolean,\n\tname: string\n}\n\nexport const setIdentifiers = (currentIdentifiers: identifiers) => async (dispatch: any) => {\n\ttry {\n\t\t\tdispatch({\n\t\t\t\t\ttype: 'SET_IDENTIFIERS',\n\t\t\t\t\tpayload: currentIdentifiers /* data */\n\t\t\t})\n\t} catch (error) {\n\t\t\tconsole.log(error)\n\t}\n}","import React, {useState, useEffect} from 'react';\nimport '../../App.css'\nimport List from '@mui/material/List';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport Tooltip from '@mui/material/Tooltip'\nimport Chip from '@mui/material/Chip'\nimport Stack from '@mui/material/Stack';\nimport ListItemText from '@mui/material/ListItemText';\nimport PersonRemoveIcon from '@mui/icons-material/PersonRemove';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport ExpandLess from '@mui/icons-material/ExpandLess';\nimport ExpandMore from '@mui/icons-material/ExpandMore';\nimport Collapse from '@mui/material/Collapse';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport GavelIcon from '@mui/icons-material/Gavel';\nimport AutoFixHighIcon from '@mui/icons-material/AutoFixHigh';\nimport {fetchNui} from \"../../../utils/fetchNui\";\nimport InfoIcon from '@mui/icons-material/Info';\nimport ExploreIcon from '@mui/icons-material/Explore';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport ChromeReaderModeIcon from '@mui/icons-material/ChromeReaderMode';\nimport HealingIcon from '@mui/icons-material/Healing';\n\ninterface props {\n\tbanPlayerPrompt: any,\n\tkickPlayerPrompt: any,\n\tsetNotifMessage: any,\n\tid: number,\n\tsteam: string,\n\tdiscord: string,\n\tfivem: string,\n\tname: string,\n\tnote: string,\n\tsetIdentifier: any,\n\tonline: boolean\n}\n\ninterface IdInterface {\n\tid: number\n}\n\nconst PlayerItem: React.FC<props> = (props) => {\n\n\tconst [open, setOpen] = useState(false);\n\tconst [banOpen, setBanOpen] = useState(false);\n\n\tconst handleClick = () => {\n\t\tsetOpen(!open)\n\t}\n\n\tconst handleClickOpen = () => {\n\t\tsetBanOpen(true);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetBanOpen(false);\n\t};\n\n\tconst setIdentifier = (steam: string, discord: string, fivem: string, name: string) => {\n\t\tprops.setIdentifier(steam, discord, fivem, name)\n\t}\n\n\tconst banPlayer = () => {\n\t\tprops.banPlayerPrompt(props.id, props.name)\n\t}\n\n\tconst kickPlayer = () => {\n\t\tprops.kickPlayerPrompt(props.id, props.name)\n\t}\n\n\tconst spectatePlayer = () => {\n\t\tfetchNui<IdInterface>('spectatePlayer', { id: props.id }).then(resData => { \n\t\t\tprops.setNotifMessage(`Spectate toggled`)\n\t\t})\n\t}\n\n\tconst teleportPlayer = () => {\n\t\tfetchNui<IdInterface>('gotoPlayer', { id: props.id }).then(resData => { \n\t\t\tprops.setNotifMessage(`You teleported to ${props.name}`)\n\t\t})\n\t}\n\n\tconst summonPlayer = () => {\n\t\tfetchNui<IdInterface>('tomePlayer', { id: props.id }).then(resData => { \n\t\t\tprops.setNotifMessage(`You brought ${props.name} to you`)\n\t\t})\n\t}\n\n\tconst cloakPlayer = () => {\n\t\tfetchNui<IdInterface>('cloakPlayer', { id: props.id }).then(resData => { \n\t\t\tprops.setNotifMessage(`Cloak toggled for ${props.name}!`)\n\t\t})\t\t\n\t}\n\n\tconst infoPlayer = () => {\n\t\tfetchNui<IdInterface>('infoPlayer', { id: props.id }).then(resData => { \n\t\t\tprops.setNotifMessage(`Information for this ${props.name} has been requested.`)\n\t\t})\n\t}\n\n\tconst healPlayer = () => {\n\t\tfetchNui<IdInterface>('healPlayer', { id: props.id }).then(resData => { \n\t\t\tprops.setNotifMessage(`You successfully healed ${props.name}`)\n\t\t})\n\t}\n\n\n\treturn (<div>\n\t\t<Tooltip title={props.id} placement=\"left\" arrow>\n\t\t<ListItemButton divider onClick={ () => /**setIdentifier(props.steam, props.discord, props.fivem, props.name)*/ handleClick() } className=\"playerItem\" alignItems=\"flex-start\" >\n\t\t\t<ListItemText primary={`${props.name}`} secondary={ (props.note !== \"\") ? props.note : \"\" } />\n\t\t\t<Stack direction=\"row\" spacing={0.5}>\n\t\t\t\t<Chip label={ (props.online === true) ? \"Online\" : \"Offline\" } variant={\"outlined\"} size={\"small\"} color={ (props.online === true) ? \"success\" : \"error\" } />\n\t\t\t\t<Chip label={props.fivem} size={\"small\"} />\n\t\t\t</Stack>\n\t\t\t{open ? <ExpandLess /> : <ExpandMore />}\n\t\t</ListItemButton>\n\t\t</Tooltip><Collapse className=\"rowAlign\" in={open} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" dense={true} disablePadding>\n\t\t\t\t\t{/* Player Information */}\n          <ListItemButton onClick={ () => setIdentifier(props.steam, props.discord, props.fivem, props.name) } sx={{ pl: 4 }}>\n            <ListItemIcon>\n              <InfoIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Player Info\" />\n          </ListItemButton>\n\t\t\t\t\t{/* Ban Player */}\n          <ListItemButton onClick={banPlayer} sx={{ pl: 4 }}>\n            <ListItemIcon>\n              <GavelIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Ban Player\" />\n          </ListItemButton>\n\t\t\t\t\t{/* Kick Player */}\n          <ListItemButton onClick={kickPlayer} sx={{ pl: 4 }}>\n            <ListItemIcon>\n              <PersonRemoveIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Kick Player\" />\n          </ListItemButton>\n\t\t\t\t\t\t{/* Spectate Player */}\n\t\t\t\t\t\t<ListItemButton onClick={spectatePlayer} sx={{ pl: 4 }}>\n            <ListItemIcon>\n              <VisibilityIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Spectate Player\" />\n          </ListItemButton>\n\t\t\t\t\t\t{/* Teleport to Player */}\n\t\t\t\t\t\t<ListItemButton onClick={teleportPlayer} sx={{ pl: 4 }}>\n            <ListItemIcon>\n              <ExploreIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Teleport to Player\" />\n          </ListItemButton>\n\t\t\t\t\t{/* Summon Player */}\n\t\t\t\t\t<ListItemButton onClick={summonPlayer} sx={{ pl: 4 }}>\n            <ListItemIcon>\n              <AutoFixHighIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Summon Player\" />\n          </ListItemButton>\n\t\t\t\t\t{/* Cloak Player */}\n\t\t\t\t\t<ListItemButton onClick={cloakPlayer} sx={{ pl: 4 }}>\n            <ListItemIcon>\n              <VisibilityOffIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Cloak Player\" />\n          </ListItemButton>\n        </List>\n    </Collapse></div>);\n}\n\nexport default PlayerItem;","import React, {useState, useEffect} from 'react';\nimport '../App.css'\n\nimport CardContent from '@mui/material/CardContent'\nimport List from '@mui/material/List';\nimport Grid from '@mui/material/Grid';\nimport {useNuiEvent} from \"../../hooks/useNuiEvent\";\n\nimport {fetchNui} from \"../../utils/fetchNui\";\n\nimport { setIdentifiers } from '../../redux/actions/identifiers'\n\nimport { useDispatch } from 'react-redux';\n\nimport Input from '@mui/material/Input';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\n\nimport PersonSearchIcon from '@mui/icons-material/PersonSearch';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport PlayerItem from './PlayerList/PlayerItem'\n\nimport InputAdornment from '@mui/material/InputAdornment';\n\ninterface props {\n\trefresh: any,\n\tsetNotifMessage: any\n}\n\ninterface IBanInfo {\n\tid: number,\n\tname: string\n}\n\ninterface ReturnData {\n  name: string,\n  id: number,\n  steam: string,\n  fivem: string,\n  discord: string,\n  note: string,\n\tonline: boolean\n}\n\ninterface KickData {\n\tid: number,\n\treason: string\n}\n\ninterface BanData {\n\tid: number,\n\ttime: number,\n\treason: string\n}\n\nconst PlayerList: React.FC<props> = (props) => {\n\n\tconst [players, setPlayers] = useState([\n\t\t{name: \"\", id: 1, steam: \"\", fivem: \"\", discord: \"\", note: \"\", online: true  }\n\t])\n\n\tuseNuiEvent<any>('playerList', (data: any) => {\n    setPlayers(data)\n  })\n\n\tuseEffect(() => {\n\t\tfetchNui<ReturnData>('playerList', { name: \"\", id: 1, steam: \"\", fivem: \"\", discord: \"\", note: \"\", online: true}).then(resData => { \n\t\t\t\n\t\t})\n  }, []);\n\n\tconst [banOpen, setBanOpen] = useState(false);\n\tconst [kickOpen, setKickOpen] = useState(false);\n\n\tconst [search, setSearch] = useState(\"\")\n\n\tconst [currentInfo, setCurrentInfo] = useState<IBanInfo | { id: 1, name: \"Example\" }>({ id: 1, name: \"Example\" })\n\n\tconst handleClose = () => {\n\t\tsetBanOpen(false);\n\t\tsetKickOpen(false)\n\t};\n\n\t\n\n\tconst banOptions = [\n\t\t{ label: '1 Hour', time:  3600 },\n\t\t{ label: '6 Hours', time:  21600 },\n\t\t{ label: '12 Hours', time:  43200 },\n\t\t{ label: '1 Day', time: 86400 },\n\t\t{ label: '2 Days', time:  172800 },\n\t\t{ label: '3 Days', time:  259200 },\n\t\t{ label: '5 Days', time:  432000 },\n\t\t{ label: '1 Week', time:  604800 },\n\t\t{ label: '2 Weeks', time: 1209600 },\n\t\t{ label: 'Permanent', time: 69 },\n\t];\n\n\tconst banPlayerPrompt = (id: number, name: string) => {\n\t\tsetCurrentInfo({\n\t\t\tid: id,\n\t\t\tname: name\n\t\t})\n\t\tsetBanOpen(true)\n\t};\n\n\tconst kickPlayerPrompt = (id: number, name: string) => {\n\t\tsetCurrentInfo({\n\t\t\tid: id,\n\t\t\tname: name\n\t\t})\n\t\tsetKickOpen(true)\n\t};\n\n  \n\n\tconst dispatch = useDispatch();\n\n\tconst setIdentifier = (steam: string, discord: string, fivem: string, name: string) => {\n\t\tdispatch(setIdentifiers({\n\t\t\tsteam: steam,\n\t\t\tdiscord: discord,\n\t\t\tfivem: fivem,\n\t\t\tshow: true,\n\t\t\tname: name\n\t\t}))\n\t\tprops.refresh()\n\t}\n\n\tconst searchChange = (e: any) => {\n\t\tconst value = e.target.value\n\t\tsetSearch(value)\n\t}\n\n\tconst [banLength, setBanLength] = useState({\n\t\tlabel: \"1 Hour\",\n\t\ttime: 3600\n\t})\n\n\tconst updateBanLength = (event, values) => {\n\t\tsetBanLength(values)\n\t}\n\n\tconst [banReason, setBanReason] = useState(\"\")\n\n\tconst updateBanReason = (e: any) => {\n\t\tsetBanReason(e.target.value)\n\t}\n\n\n\n\tconst handleBan = () => {\n\t\tif (banReason === \"\") { \n\t\t\tprops.setNotifMessage(\"Please provide a valid ban reason\") \n\t\t\treturn \n\t\t}\n\t\tfetchNui<BanData>('banPlayer', { id: currentInfo.id, time: banLength.time, reason: banReason }).then(resData => { \n\t\t\tprops.setNotifMessage(\"This player has been banned!\")\n\t\t\thandleClose()\n\t\t\tsetBanReason(\"\")\n\t\t})\n\t}\n\n\tconst [kickReason, setKickReason] = useState(\"\")\n\n\tconst updateKickReason = (e: any) => {\n\t\tsetKickReason(e.target.value)\n\t}\n\n\n\tconst handleKick = () => {\n\t\tif (kickReason === \"\") { \n\t\t\tprops.setNotifMessage(\"Please provide a valid kick reason\") \n\t\t\treturn \n\t\t}\n\t\tfetchNui<KickData>('kickPlayer', { id: currentInfo.id, reason: kickReason }).then(resData => { \n\t\t\tprops.setNotifMessage(\"This player has been kicked!\")\n\t\t\thandleClose()\n\t\t\tsetKickReason(\"\")\n\t\t})\n\t}\n\n\tconst OrderedList = players.sort(function(a, b) {\n    return (a.id - b.id);\n\t});\n\n\treturn (\n\t\t<div>\n\t\t\t<Dialog className=\"dialogBan\" open={banOpen} onClose={handleClose} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description2\" >\n\t\t\t\t<DialogTitle id=\"alert-dialog-title\">\n\t\t\t\t\t{\"Ban Player\"}\n\t\t\t\t</DialogTitle>\n\t\t\t\t<DialogContent>\n\t\t\t\t<Autocomplete className=\"banDialog\" value={banLength} onChange={updateBanLength} id=\"combo-box-demo\" options={banOptions} sx={{ width: 300 }} renderInput={(params) => <TextField {...params} label=\"Ban Length\" />} />\n\t\t\t\t<TextField value={banReason} onChange={updateBanReason} label=\"Ban Reason\" sx={{marginBottom: '15px', width: 300}} />\n\t\t\t\t<DialogContentText id=\"alert-dialog-description2\">You are about to ban <b>{currentInfo.name}</b>, are you sure you want to do this?</DialogContentText>\n\t\t\t\t</DialogContent>\n\t\t\t\t<DialogActions>\n\t\t\t\t\t<Button onClick={handleClose}>No</Button>\n\t\t\t\t\t<Button onClick={handleBan} autoFocus>Yes</Button>\n\t\t\t\t</DialogActions>\n\t\t\t</Dialog>\n\t\t\t<Dialog className=\"dialogBan\" open={kickOpen} onClose={handleClose} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description2\" >\n\t\t\t\t<DialogTitle id=\"alert-dialog-title\">\n\t\t\t\t\t{\"Kick Player\"}\n\t\t\t\t</DialogTitle>\n\t\t\t\t<DialogContent>\n\t\t\t\t<TextField value={kickReason} onChange={updateKickReason} label=\"Kick Reason\" sx={{marginBottom: '15px', marginTop: '5px', width: 300}} />\n\t\t\t\t<DialogContentText id=\"alert-dialog-description2\">You are about to kick <b>{currentInfo.name}</b>, are you sure you want to do this?</DialogContentText>\n\t\t\t\t</DialogContent>\n\t\t\t\t<DialogActions>\n\t\t\t\t\t<Button onClick={handleClose}>No</Button>\n\t\t\t\t\t<Button onClick={handleKick} autoFocus>Yes</Button>\n\t\t\t\t</DialogActions>\n\t\t\t</Dialog>\n\t\t\t<CardContent>\n\n\t\t\t\t<FormControl fullWidth variant=\"standard\">\n\t\t\t\t\t<InputLabel htmlFor=\"input-with-icon-adornment\">Player Search</InputLabel>\n\t\t\t\t\t<Input value={search} onChange={searchChange} id=\"input-with-icon-adornment\" startAdornment={ <InputAdornment position=\"start\"> <PersonSearchIcon /> </InputAdornment> } />\n\t\t\t\t</FormControl>\n\t\t\t\t<Grid container spacing={2} maxWidth={750}>\n\t\t\t\t\t<Grid item sx={{ width: '100%' }}>\n\t\t\t\t\t\t<List dense={true}>\n\t\t\t\t\t\t\t{OrderedList.filter(player => (player.name.toLowerCase().includes(search.toLowerCase()) || player.fivem.toLowerCase().includes(search.toLowerCase()) || player.discord.toLowerCase().includes(search.toLowerCase())) ).map(filteredPerson => (\n\t\t\t\t\t\t\t\t<PlayerItem banPlayerPrompt={banPlayerPrompt} online={filteredPerson.online} kickPlayerPrompt={kickPlayerPrompt} setNotifMessage={props.setNotifMessage} id={filteredPerson.id} steam={filteredPerson.steam} discord={filteredPerson.discord} fivem={filteredPerson.fivem} name={filteredPerson.name} note={filteredPerson.note} setIdentifier={setIdentifier} />\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</List>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</CardContent>\n\t\t</div>\n  );\n}\n\nexport default PlayerList;","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { useSelector, RootStateOrAny, useDispatch } from 'react-redux';\nimport { setIdentifiers } from '../../redux/actions/identifiers'\n\nexport default function Identifiers() {\n  const [open, setOpen] = React.useState(false);\n\n  const identifiersState = useSelector((state: RootStateOrAny) => state.identifiers);\n  const identifiers = identifiersState.currentIdentifiers\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    if (identifiers.show) {\n      setOpen(true)\n    } else {\n      setOpen(false)\n    }\n  }, [identifiersState]); \n  \n  const handleClose = () => {\n    setOpen(false);\n    dispatch(setIdentifiers({\n\t\t\tsteam: identifiers.steam,\n\t\t\tdiscord: identifiers.discord,\n\t\t\tfivem: identifiers.fivem,\n\t\t\tshow: false,\n      name: identifiers.name\n\t\t}))\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Player Identifiers\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">You can find a list of <b>{identifiers.name}</b>'s identifiers below!<br /><br />Steam: <b>{identifiers.steam}</b><br />Discord: <b>{identifiers.discord}</b><br />FiveM: <b>{identifiers.fivem}</b><br /></DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} autoFocus>Close</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React, {useState, useEffect} from 'react';\nimport '../App.css'\n\nimport CardContent from '@mui/material/CardContent'\nimport List from '@mui/material/List';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Grid from '@mui/material/Grid';\nimport AnnouncementIcon from '@mui/icons-material/Announcement';\n\nimport {fetchNui} from \"../../utils/fetchNui\";\n\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Autocomplete from '@mui/material/Autocomplete';\n\nimport CloudIcon from '@mui/icons-material/Cloud';\nimport CarRentalIcon from '@mui/icons-material/CarRental';\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\nimport MapIcon from '@mui/icons-material/Map';\n\nimport TextField from '@mui/material/TextField';\n\ninterface props {\n\tplayercount: number,\n\tmaxcount: number,\n\tsetNotifMessage: any\n}\n\ninterface message {\n\tmessage: string\n}\n\nconst StaffCommands: React.FC<props> = (props) => {\n\n\tconst [tpcoords, setTpCoords] = useState(false)\n\n\tconst handleTpCoordsOpen = () => {\n\t\tsetTpCoords(true)\n\t}\n\n\tconst handleTpCoordsClose = () => {\n\t\tsetTpCoords(false)\n\t}\n\n\tconst teleportWaypoint = () => {\n\t\tfetchNui('tpwaypoint').then(resData => { \n\t\t\tprops.setNotifMessage(resData)\n\t\t})\n\t}\n\n\tconst [coordsMessage, setCoordsMessage] = useState(\"\")\n\n\tconst updateCoordsMessage = (e: any) => {\n\t\tsetCoordsMessage(e.target.value)\n\t}\n\n\tconst handleCoordsMessage = () => {\n\t\tif (coordsMessage === \"\") { \n\t\t\tprops.setNotifMessage(\"Please provide valid coordinates.\") \n\t\t\treturn \n\t\t}\n\t\tfetchNui<message>('tpcoords', { message: coordsMessage }).then(resData => { \n\t\t\thandleTpCoordsClose()\n\t\t\tprops.setNotifMessage(resData)\n\t\t\tsetCoordsMessage(\"\")\n\t\t})\n\t}\n\n\tuseEffect(() => {\n    // could ask for weather here and set the value of the weather box with it, if requested that is.\n  }, []);\n\n\treturn (\n\t\t<div>\n\t\t\t<Dialog className=\"dialogBan\" open={tpcoords} onClose={handleTpCoordsClose} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description2\" >\n\t\t\t\t<DialogTitle id=\"alert-dialog-title\"> {\"Teleport to Coords\"} </DialogTitle>\n\t\t\t\t<DialogContent>\n\t\t\t\t<TextField value={coordsMessage} onChange={updateCoordsMessage} label=\"Coordinates\" sx={{marginBottom: '15px', marginTop:'5px', width: 300 }} />\n\t\t\t\t<DialogContentText id=\"alert-dialog-description2\">Please provide a string in vector3 or vector4 format.</DialogContentText>\n\t\t\t\t</DialogContent>\n\t\t\t\t<DialogActions>\n\t\t\t\t\t<Button onClick={handleTpCoordsClose}>Cancel</Button>\n\t\t\t\t\t<Button onClick={handleCoordsMessage} autoFocus>Teleport</Button>\n\t\t\t\t</DialogActions>\n\t\t\t</Dialog>\n\n\t\t\t<CardContent>\n\t\t\t\t<Grid container spacing={2} maxWidth={585}>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<List dense={true}>\n\t\t\t\t\t\t\t<ListItemButton onClick={teleportWaypoint}>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t<LocationOnIcon />\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText primary=\"Teleport to Waypoint\" secondary='Teleport to your currently set waypoint.' />\n\t\t\t\t\t\t\t</ListItemButton>\n\t\t\t\t\t\t\t<ListItemButton onClick={handleTpCoordsOpen}>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t<MapIcon />\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText primary=\"Teleport to Coords\" secondary='Input vector3 or vector4 coordinates to teleport to.' />\n\t\t\t\t\t\t\t</ListItemButton>\n\t\t\t\t\t\t</List>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</CardContent>\n\t\t</div>\n  );\n}\n\nexport default StaffCommands;","import React, {useState, useEffect} from 'react';\nimport '../App.css'\nimport CardContent from '@mui/material/CardContent'\nimport List from '@mui/material/List';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport TextField from '@mui/material/TextField';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport PermIdentityIcon from '@mui/icons-material/PermIdentity';\nimport ClearAllIcon from '@mui/icons-material/ClearAll';\nimport DeleteSweepIcon from '@mui/icons-material/DeleteSweep';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport FlightTakeoffIcon from '@mui/icons-material/FlightTakeoff';\nimport HomeRepairServiceIcon from '@mui/icons-material/HomeRepairService';\nimport PaymentIcon from '@mui/icons-material/Payment';\n\nimport {fetchNui} from \"../../utils/fetchNui\";\n\ninterface props {\n\tplayercount: number,\n\tmaxcount: number,\n\tsetNotifMessage: any\n}\n\ninterface message {\n\tmessage: string\n}\n\nconst UtilityActions: React.FC<props> = (props) => {\n\n\tconst [clear, setClear] = useState(false)\n\n\tconst handleClearOpen = () => {\n\t\tsetClear(true)\n\t}\n\n\tconst handleClearClose = () => {\n\t\tsetClear(false)\n\t}\n\n\tconst noClip = () => {\n\t\tfetchNui('noclip')\n\t}\n\t\n\tconst clearOptions = [\n\t\t{ label: '10 Radius', value: 10.0 },\n\t\t{ label: '25 Radius', value: 25.0 },\n\t\t{ label: '50 Radius', value: 50.0 },\n\t\t{ label: '75 Radius', value: 75.0 },\n\t\t{ label: '100 Radius', value: 100.0 },\n\t\t{ label: '125 Radius', value: 125.0 },\n\t\t{ label: '150 Radius', value: 150.0 },\n\t\t{ label: '175 Radius', value: 175.0 },\n\t\t{ label: '200 Radius', value: 200.0 },\n\t\t{ label: '250 Radius', value: 250.0 },\n\t];\n\n\tconst repairVehicle = () => {\n\t\tfetchNui('repairvehicle')\n\t\tprops.setNotifMessage(\"Vehicle should be repaired.\")\n\t}\n\n\tconst [clearArea, setClearArea] = useState({ label: '100 Radius', value: 100.0 })\n\n\tconst updateClearArea = (event, values) => {\n\t\tsetClearArea(values)\n\t}\n\n\tconst handleClearAreaChange = () => {\n\t\tfetchNui<message>('cleararea', { message: clearArea.value }).then(resData => { \n\t\t\tprops.setNotifMessage(\"Area cleared!\")\n\t\t\thandleClearClose()\n\t\t})\n\t}\n\n\tconst deleteVehicle = () => {\n\t\tfetchNui('deleteVehicle')\n\t}\n\n\tconst deleteEntity = () => {\n\t\tfetchNui('deleteEntity')\n\t}\n\n\tconst deletePed = () => {\n\t\tfetchNui('deletePed')\n\t}\n\n\tconst deleteAllVehicles = () => {\n\t\tfetchNui('deleteAllVehicles')\n\t}\n\n\tconst magicTrick = () => {\n\t\tfetchNui('magicTrick')\n\t}\n\n\tconst playerNames = () => {\n\t\tfetchNui('playerNames')\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t\n\t\t\t<Dialog className=\"dialogBan\" open={clear} onClose={handleClearClose} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description2\" >\n\t\t\t\t<DialogTitle id=\"alert-dialog-title\"> {\"Clear Area\"} </DialogTitle>\n\t\t\t\t<DialogContent>\n\t\t\t\t<Autocomplete value={clearArea} onChange={updateClearArea} id=\"combo-box-demo\" options={clearOptions} fullWidth sx={{marginTop: '5px', marginBottom: '15px'}} renderInput={(params) => <TextField {...params} label=\"Clear Area\" />} />\n\t\t\t\t<DialogContentText id=\"alert-dialog-description2\">Select an option from the auto complete form above to clear {clearArea.value} radius area around you.</DialogContentText>\n\t\t\t\t</DialogContent>\n\t\t\t\t<DialogActions>\n\t\t\t\t\t<Button onClick={handleClearClose}>Cancel</Button>\n\t\t\t\t\t<Button onClick={handleClearAreaChange} autoFocus>Clear Area</Button>\n\t\t\t\t</DialogActions>\n\t\t\t</Dialog>\n\n\t\t\t<CardContent>\n\t\t\t\t<Grid container spacing={2} maxWidth={585}>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<List dense={true}>\n\t\t\t\t\t\t\t<ListItemButton onClick={handleClearOpen}>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t<ClearAllIcon />\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText primary=\"Clear Area\" secondary='Clear the area of objects and abandoned NPC vehicles.' />\n\t\t\t\t\t\t\t</ListItemButton>\n\t\t\t\t\t\t\t<ListItemButton onClick={deleteVehicle}>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t<DeleteForeverIcon />\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText primary=\"Delete Vehicle\" secondary='This will delete the closest vehicle to you.' />\n\t\t\t\t\t\t\t</ListItemButton>\n\t\t\t\t\t\t\t<ListItemButton onClick={deleteEntity}>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t<DeleteForeverIcon />\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText primary=\"Delete Entity\" secondary='Delete the closest entity to you.' />\n\t\t\t\t\t\t\t</ListItemButton>\n\t\t\t\t\t\t\t<ListItemButton onClick={deletePed}>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t<DeleteForeverIcon />\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText primary=\"Delete Ped\" secondary='Delete the closest ped to you.' />\n\t\t\t\t\t\t\t</ListItemButton>\n\t\t\t\t\t\t\t<ListItemButton onClick={deleteAllVehicles}>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t<DeleteSweepIcon />\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText primary=\"Delete All Vehicles\" secondary='Careful with this, it will delete all the vehicles in the server.' />\n\t\t\t\t\t\t\t</ListItemButton>\n\t\t\t\t\t\t\t<ListItemButton onClick={noClip}>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t<FlightTakeoffIcon />\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText primary=\"No Clip\" secondary='Toggle no clip.' />\n\t\t\t\t\t\t\t</ListItemButton>\n\t\t\t\t\t\t\t<ListItemButton onClick={magicTrick}>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t<VisibilityOffIcon />\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText primary=\"Magic Trick\" secondary='Do a magic trick and set yourself invisible to others!' />\n\t\t\t\t\t\t\t</ListItemButton>\n\t\t\t\t\t\t\t<ListItemButton onClick={playerNames}>\n\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t<PermIdentityIcon />\n\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t<ListItemText primary=\"Show Player Names\" secondary='Toggle overhead player names.' />\n\t\t\t\t\t\t\t</ListItemButton>\n\t\t\t\t\t\t</List>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</CardContent>\n\t\t</div>\n  );\n}\n\nexport default UtilityActions;","import React, {useState} from 'react';\nimport './App.css'\nimport {useNuiEvent} from \"../hooks/useNuiEvent\";\nimport {useExitListener} from \"../hooks/useExitListener\";\nimport Snackbar from '@mui/material/Snackbar';\nimport {BrowserRouter as Router, Switch, Route, useHistory} from 'react-router-dom';\nimport MainMenu from './Menus/MainMenu'\nimport PlayerManagement from './Menus/PlayerManagement'\nimport PlayerList from './Menus/PlayerList'\nimport Identifiers from './Misc/Identifiers'\nimport StaffCommands from './Menus/StaffCommands'\nimport Card from '@mui/material/Card';\nimport UtilityActions from './Menus/UtilityActions'\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\nimport Alert from '@mui/material/Alert';\nimport Button from '@mui/material/Button';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\n\n// This will set the NUI to visible if we are\n// developing in browser\n/**debugData([\n  {\n    action: 'setVisible',\n    data: true,\n  }\n])*/\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: 'dark',\n  }\n});\n\nconst App: React.FC = () => {\n  const [isVisible, setIsVisible] = useState(false)\n  const [refresh, setRefresh] = useState(false)\n  const [playerCount, setPlayerCount] = useState(0)\n  const [maxPlayerCount, setMaxPlayerCount] = useState(0)\n\n  useNuiEvent<boolean>('setVisible', (data) => {\n    setIsVisible(data)\n  })\n\n  useNuiEvent<number>('playerCount', (data) => {\n    setPlayerCount(data)\n  })\n\n  useExitListener(setIsVisible)\n\n  useNuiEvent<number>('maxPlayerCount', (data) => {\n    setMaxPlayerCount(data)\n  })\n\n  let history = useHistory();\n\n  const GoBack = () => {\n    history.goBack();\n  }\n\n  const handleRefresh = () => {\n    setRefresh(!refresh)\n  }\n\n  const [notification, setNotification] = useState(false)\n\tconst [notificiationMessage, setNotificationMessage] = useState(\"\")\n\n  const setNotifMessage = (message: string) => {\n\t\tsetNotificationMessage(message)\n\t\tsetNotification(true)\n\t}\n\n  const handleCloseNotif = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setNotification(false);\n  };\n\n  const goHome = () => {\n    history.push(\"/\");\n  }\n\n  return (\n      <div className=\"App\" >\n         <Snackbar open={notification} autoHideDuration={2500} onClose={handleCloseNotif} anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }} >\n          <Alert onClose={handleCloseNotif} variant=\"filled\" severity=\"success\" sx={{ width: '100%' }}>{notificiationMessage}</Alert>\n        </Snackbar>\n        <div style={{ display: isVisible ? '' : 'none' }}>\n          <ThemeProvider theme={darkTheme}>\n            <Identifiers />\n            <Card sx={{ minWidth: 500, maxWidth: 500, maxHeight: 600, overflow: 'auto' }} >\n              <AppBar position=\"static\">\n                <Toolbar>\n                  <IconButton size=\"large\" onClick={GoBack} edge=\"start\" color=\"inherit\" aria-label=\"menu\" sx={{ mr: 2 }} >\n                    <ArrowBackIosNewIcon />\n                  </IconButton>\n                  <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}> USARRP ({playerCount}/{maxPlayerCount}) </Typography>\n                  <Button color=\"inherit\" onClick={goHome}>Home</Button>\n                </Toolbar>\n              </AppBar>\n              <Switch>\n                <Route path=\"/\" exact render={() => <MainMenu />} />\n                <Route path=\"/web/build/index.html\" exact render={() => <MainMenu  />} />\n                <Route path=\"/playermanagement\" exact render={() => <PlayerManagement  playercount={playerCount} maxcount={maxPlayerCount} setNotifMessage={setNotifMessage}  />} />\n                <Route path=\"/playerlist\" exact render={() => <PlayerList  refresh={handleRefresh} setNotifMessage={setNotifMessage} />} />\n                <Route path=\"/staffcommands\" exact render={() => <StaffCommands  playercount={playerCount} maxcount={maxPlayerCount} setNotifMessage={setNotifMessage}  />} />\n                <Route path=\"/utilityactions\" exact render={() => <UtilityActions  playercount={playerCount} maxcount={maxPlayerCount} setNotifMessage={setNotifMessage}  />} />\n              </Switch>\n            </Card>\n          </ThemeProvider>\n        </div>\n      </div>\n\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport identifiers from './identifiers';\n\nexport default combineReducers({\n  identifiers,\n})","export default (identifiers = {currentIdentifiers: {steam: \"\", discord: \"\", fivem: \"\", show: false, name: \"\"}}, action: any) => {\n\tswitch(action.type) {\n\t\tcase 'GET_IDENTIFIERS':\n\t\t\treturn identifiers;\n\t\tcase 'SET_IDENTIFIERS': \n\t\t\treturn {currentIdentifiers: action.payload}\n\t\tdefault:\n\t\t\treturn identifiers;\n\t}\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nimport { Provider } from 'react-redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { createStore, applyMiddleware } from 'redux';\nimport reducers from './redux/reducers'\nimport thunk from 'redux-thunk';\n\nconst store = createStore(reducers, composeWithDevTools(\n  applyMiddleware(thunk),\n))\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router basename=\"/\">\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}